@model DatabaseAccess.user
@using  cse_just.Models
<br />
<br />
@{
    ViewBag.Title = "User Registration";
}


@using (Html.BeginForm("Create", "users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card mb-4 shadow">
            <div class="card-header">
                <h4 class="m-0 font-weight-bold text-primary">New User Information :</h4>
            </div>

            <div class="card-body">

                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.first_name, "First Name:", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.last_name, "Last Name:", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })


                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.birth_date, "Birth Date:", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.birth_date, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.birth_date, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.contact_no, "Contact No:", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.contact_no, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.contact_no, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.email_address, "Email Address", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.email_address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.email_address, "", new { @class = "text-danger" })



                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.current_address, "Current Address", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.current_address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.current_address, "", new { @class = "text-danger" })


                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.permanent_address, "Permanent Address", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.permanent_address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.permanent_address, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.gender, "Gender", htmlAttributes: new { @class = "control-label" })

                            @Html.DropDownListFor(m => m.gender,
                                      new SelectList(Enum.GetValues(typeof(Gender))), "Select Gender")
                            @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.blood_group, "Blood Group", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.blood_group, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.blood_group, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.religion, "Religion", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.religion,
                                new SelectList(Enum.GetValues(typeof(Religion))), "Select Religion")

                            @Html.EditorFor(model => model.religion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.religion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.nationality, "Nationality", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.nationality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nationality, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.profile_pic, "Profile Picture", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.profile_pic, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.profile_pic, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(model => model.password, "Password", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.usertype_id, "UserType", htmlAttributes: new { @class = "control-label" })

                            @Html.DropDownList("usertype_id", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.usertype_id, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>
                


                   
                        

                  


                    

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">

                                <input type="submit" value="Submit" class="btn btn-success" />
                                @Html.ActionLink("Back To List", "Index", null, new { @class = "btn btn-warning" })

                            </div>
                        </div>
                    


                

            </div>

        </div>

    </div>
}
